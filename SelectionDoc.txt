RWS: Roulette Wheel Selection
- Scaling:
  1. Windowing: -worst
  2. Exponential: sqrt(f) + 1
  3. Sigma scaling: max{(f - <f>)/(2*stdDev(f)) , 1.0}
  4. Linear Transformation
  5. Top scaling + sharing: Top become 1, rest become 0
- Goal: 
  Increase diversity

SUS: Stochastic Universal Sampling
- Random starting position on the wheel.
- Step around the wheel N times, at steps of size 1/N.


do {
	index = rand.nextInt(N) // 1/N probability to choose anyone
} while(rand.nextDouble() >= population[index].fitness / maxFitness);
return index;

RWS Func 2: 2.95 ms
Top Func 2: 2.25 ms
SUS Func 2: 2.08 ms
Tournament(5) Func 2: 7.15 ms
Tournament(15) Func 2: 70.33 ms

RWS Func 1: 500 ms
Top Func 1: 5.7 ms
SUS Func 1: 320 ms
Tournament(5) Func 1: 61 ms

Queens, N=20:
Top: 21 ms
RWS: 71 ms


Yuval Performance Probelms:
- calcNichingFitnessForIndex takes 100% of the time: 300 ms per run of 30-Queens
- Without Math.pow: 200ms


Next steps:
1. Seperate a Problem from the Genetic Engine.
2. User Interface
3. Organize Yuval's LocalOptimum Signals & Remediations.
4. Understand pareto optimality
5. Implement pareto optimality
7. Write Report
